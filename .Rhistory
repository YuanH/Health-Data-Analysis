hh
n = 1
attributes(n)
x <-1
x = 1
x <-2
print(x)
x[2]=3
print(x)
print(x)
attributes(x)
attribute(x)
lol
ls
n
n=3
n
x = 1:20
x
x =1:2:20
x<-9:29
x<-c(1+0i,2+4i)
sq(1+i)
(i+1)^2
i^2
2^2
c(1+i)
c(1+1i)
(1+1i)^2
m
h hj
h''
cbind
install.packages("swirl")
library("swirl")
swirl()
1
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z=c(1.1,9,3.14)
z <- c(1.1 , 9, 3.14)
?
c()
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
print(my_sqrt)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
`:`
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=10)
?'seq'
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times = 10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
print(tf)
tf
a <- num_vect >= 6
num_vect >= 6
c("My","name", "is")
my_char<-c("My","name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "DiabloRojo")
paste(c(my_char, "DiabloRojo"), collapse = " ")
my_name <- paste(c(my_char, "DiabloRojo"), collapse = " ")
my_name <- c(my_char, "DiabloRojo")
my_name
paste(c(my_char, "DiabloRojo"), collapse = " ")
paste(my_name, collapse = " ")
paste ("Hello","world!",sep = " ")
paste(c(1:3),c("X","Y","Z"), sep="")
Try paste(LETTERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y, z), 100)
my_na<-my_data.na()
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[2],x[4],x[6])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,
| -10)]
x[c(-2,-10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar=2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?'matrix'
?matrix
my_matrix2 <- matrix(data = 1:20, nrow = 4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data,cnames)
?colnames
colnames(my_data)<-cnames
my_data
quit()
z<-4L
z
read("hw1_data.csv")
?read
read.csv("hw1_data")
read.csv("hw1_data.csv")
?read.csv
read.csv("hw1_data.csv")
read.csv2("hw1_data.csv")
quiz <- read.table("hw1_data.csv")
ls
hw1_data <- read.csv("~/Dropbox/R/Coursera Workspace/hw1_data.csv")
View(hw1_data)
is.na(hw1_data[1,])
is.na(hw1_data[,1])
sum(is.na(hw1_data[,1]))
hw1_data[47]
hw1_data[47,1]
mean(!is.na(hw1_data[,1]))
!is.na(hw1_data[,1])
a <- hw1_data[!is.na(hw_data)]
x[!is.na(x) & x > 0]
a<-hw1_data[,1]
a
mean(a[!is.na(a)])
hw1_data("Ozone")
hw1_data["Ozone"]
b<-hw1_data["Ozone">31]
b
b<-hw1_data["Ozone">31 & "Temp">90]
b
mean(b["Solar.R"])
c<- b["Solar.R"]
mean(c)
c
c <- c[!is.na(c)]
c
mean(c)
d <- hw1_data["Month"=6]
d <- hw1_data["Month"]
d <- hw1_data["Month"==6]
mean(d)
d <- hw1_data["Month"==6 & !is.na("Month")]
d
mean(d)
d <- hw1_data["Month"==6]
d
View(d)
d <- hw1_data["Month"=6]
d <- hw1_data["Month"]
d
d <- hw1_data("Month">=6)
d <- hw1_data["Month"=6]
d <- hw1_data["Month"==6]
d
d <- hw1_data["Month">=6]
d
d <- hw1_data["Month" is 6]
d <- hw1_data["Month" in 6]
d <- hw1_data["Month" >= 6 & "Month"<=6]
d
d <- hw1_data["Month" =6]
d <- hw1_data["Month" = 6]
hw1_data
good <- complete.cases(hw1_data)
hw1_data[good,]
d<-hw1_data[good,]
d <- d["Month" == 6]
d
d<-hw1_data[good,]
d("Month")
d[Month]
View(d)
d["Month"]
d <- d["Month" = 6]
d <- d["Month" >= 6]
d
b<-hw1_data["Ozone">31 & "Temp">90]
b
e <- d["Month"]=6
e <- d["Month"]==6
e
d["Month"]==6
d[d["Month"]==6]
d[Temp,d["Month"]==6]
d[Temp,d["Month"]==6]]
d
d$Solar.R
d
d[d$Month == 6]
d$Solar.R
d[d$Month == "6"]
d$Month ==6
subset(d, Month == 6)
mean(subset(d, Month == 6))
e <-subset(d, Month == 6)
mean(e$Temp)
d <-subset(hw1_data, Mont ==6)
d <-subset(hw1_data, Month ==6)
d
mean(e$Temp)
mean(d$Temp)
f <- subset(hw1_data,Ozone > 31, Temp >90)
f
f <- subset(hw1_data,Ozone > 31 || Temp >90)
f
mean(f$Solar.R)
mean(f$Solar.R[!is.na(f$Solar.R)])
mean(hw1_data$Ozone[!is.na(hw1_data$Ozone)])
max(hw1_data$Ozone & hw1_data$Month ==5)
g<- subset(hw1_data,hw1_data$Month ==5)
g
max(g$Ozone)
max(g$Ozone[!is.na(g$Ozone)])
133%12
?%
133/12
133mod12
133%%12
swirl
library("swirl")
swirl()
read.csv('path2csv',stringAsFactors = FALSE)
ls
ls9)
ls()
read.csv("path2csv.csv", stringAsFactors = FALSE)
read.csv(path2csv, stringAsFactors = FALSE)
mydf<-read.csv("path2csv", stringsAsFactors = FALSE)
mydf<-read.csv("path2csv.csv", stringsAsFactors = FALSE)
mydf<-read.csv(path2csv, stringsAsFactors = FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?manip
View(cran)
select(cran, ip_id, package, country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(-(X:size))
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran, country == "IN", r_version <= 3.0.2)
filter(cran, country == "IN" | "US")
filter(cran, country == "IN" | country == "US")
filter(cran, size>10500, r_os == "linux-gnu")
filter(cran, size>100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size / 2^20)
mutate (cran3, size_gb <- size_mb / (2^10))
mutate (cran3, size_gb = size_mb / (2^10))
cran3
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE)
swirl()
nxt()
cars
mpgCity <- cars$mpgCity
cars$mpgCity
myMPG <- cars$mpgCity
mean(myMPG)
median(myMPG)
table(myMPG)
mode(myMPG)
19
swirl()
range(cars$price)
max(cars$price)-min(cars$price)
var(data$price)
var(cars$price)
sd(cars$price)
nxt()
nxt()
35
20
library(tidyr)
students
?gather
gather(students, sex, count,-grade)
gather(students, sex, count)
View(students)
students2
View(students2)
gather(students2,sex_class, count,-grade)
res<-gather(students2,sex_class, count,-grade)
res
?separate
separate(res,c("sex","class"))
separate(res, sex_class,c("sex","class"))
separate( sex_class, c("sex", "class")) %>%
submit()
submit()
students3
gather(students3, class1:class5)
gather(students3, name, test, class1:class5)
gather(students3, name, test, class = class1:class5)
gather(students3, class1:class5)
gather(students3, x,class1:class5)
gather(students3, name,class1:class5)
gather(students3, name, test, class1:class5)
gather(students3, class, class1:class5, grade)
gather(students3, class, grade, class1:class5)
submit()
?spread
test<-gather(students3, class, grade, class1:class5,na.rm=1)
test
spread(test,test,c("midterm","final"))
spread(test,test,grade)
submit
submit()
extract_numeric("class5")
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status = "passed")
failed<-mutate(failed, status = "failed")
rbind_list(passed, failed)
sat
submit()
?group_by
?group_by
submit()
source('~/Dropbox/Tableau/Health Data/Sleep Report.R')
source('~/Dropbox/Tableau/Health Data/Sleep Report.R')
source('~/Dropbox/Tableau/Health Data/Sleep Report.R')
source('~/Dropbox/Tableau/Health Data/Sleep Report.R')
